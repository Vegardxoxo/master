name: Handle student test data
on:
  repository_dispatch:
    types: [student_test_results]

jobs:
  process-student-data:
    runs-on: ubuntu-latest
    steps:
      - name: Check out teacher repo
        uses: actions/checkout@v4

      - name: Fetch artifacts from student
        env:
          GH_TOKEN: ${{ secrets.STUDENT_REPO_TOKEN }}
        run: |
          # 1) Retrieve client_payload from the event
          STUDENT_REPO="${{ github.event.client_payload.student_repo }}"
          RUN_ID="${{ github.event.client_payload.run_id }}"

          echo "Student repo: $STUDENT_REPO"
          echo "Run ID: $RUN_ID"

          # 2) List available artifacts for that run in the student repo
          gh api \
            repos/$STUDENT_REPO/actions/runs/$RUN_ID/artifacts \
            --jq '.artifacts[] | {id: .id, name: .name, size_in_bytes: .size_in_bytes}'

          # 3) Find the artifact with name "coverage" and store its ID
          ARTIFACT_ID=$(gh api repos/$STUDENT_REPO/actions/runs/$RUN_ID/artifacts --jq '.artifacts[] | select(.name=="coverage") | .id')

          echo "Artifact ID = $ARTIFACT_ID"

          # 4) Download the artifact using curl (which correctly follows redirects)
          if [ -n "$ARTIFACT_ID" ]; then
            curl -L -H "Authorization: token $GH_TOKEN" \
              https://api.github.com/repos/$STUDENT_REPO/actions/artifacts/$ARTIFACT_ID/zip \
              -o coverage.zip

            unzip coverage.zip -d coverage_extracted
            echo "Coverage artifact extracted!"
          else
            echo "No coverage artifact found!"
          fi
      


